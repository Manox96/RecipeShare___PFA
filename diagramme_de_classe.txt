DIAGRAMME DE CLASSE - RECIPE SHARE
==================================

ðŸ“‹ CLASSES PRINCIPALES
======================

ðŸ”¹ User (Django Built-in)
------------------------
+ username: String
+ email: String
+ first_name: String
+ last_name: String
+ password: String
+ is_active: Boolean
+ is_staff: Boolean
+ date_joined: DateTime
+ last_login: DateTime
+ __str__(): String

ðŸ”¹ Profile
----------
+ user: OneToOneField(User)
+ avatar: ImageField
+ __str__(): String

ðŸ”¹ Photo
--------
+ user: ForeignKey(User)
+ Nom: String(200)
+ Descreption: Text
+ upload_date: DateTime
+ image: ImageField
+ favorites: ManyToManyField(User)
+ __str__(): String

ðŸ”¹ Difficulty
-------------
+ name: String(50)
+ __str__(): String

ðŸ”¹ Cuisine
----------
+ name: String(50)
+ country_code: String(5)
+ save(): void
+ __str__(): String

ðŸ”¹ MealType
-----------
+ name: String(50)
+ __str__(): String

ðŸ”¹ Ingredient
-------------
+ name: String(100)
+ __str__(): String

ðŸ”¹ Unit
-------
+ name: String(50)
+ __str__(): String

ðŸ”¹ Tag
------
+ name: String(50)
+ __str__(): String

ðŸ”¹ Recipe
---------
+ title: String(200)
+ description: Text
+ difficulty: ForeignKey(Difficulty)
+ cuisine: ForeignKey(Cuisine)
+ meal_type: ForeignKey(MealType)
+ prep_time: Integer
+ cook_time: Integer
+ servings: Integer
+ user: ForeignKey(User)
+ created_at: DateTime
+ updated_at: DateTime
+ image: ImageField
+ is_public: Boolean
+ tags: ManyToManyField(Tag)
+ __str__(): String

ðŸ”¹ RecipeIngredient
-------------------
+ recipe: ForeignKey(Recipe)
+ ingredient: ForeignKey(Ingredient)
+ quantity: Decimal(10,2)
+ unit: ForeignKey(Unit)
+ __str__(): String

ðŸ”¹ Step
-------
+ recipe: ForeignKey(Recipe)
+ step_number: Integer
+ instruction: Text
+ __str__(): String

ðŸ”¹ RecipeTag
------------
+ recipe: ForeignKey(Recipe)
+ tag: ForeignKey(Tag)

ðŸ”¹ Favorite
-----------
+ user: ForeignKey(User)
+ recipe: ForeignKey(Recipe)
+ created_at: DateTime

ðŸ”¹ Comment
----------
+ user: ForeignKey(User)
+ recipe: ForeignKey(Recipe)
+ comment: Text
+ created_at: DateTime

ðŸ”¹ Blog
-------
+ title: String(200)
+ content: Text
+ author: ForeignKey(User)
+ image: ImageField
+ tags: ManyToManyField(Tag)
+ created_at: DateTime
+ updated_at: DateTime
+ __str__(): String

ðŸ”¹ BlogComment
--------------
+ user: ForeignKey(User)
+ blog: ForeignKey(Blog)
+ comment: Text
+ created_at: DateTime
+ __str__(): String

ðŸ”— RELATIONS
============

HERITAGE:
---------
Profile â†’ User (OneToOne)
RecipeIngredient â†’ Recipe (ManyToOne)
Step â†’ Recipe (ManyToOne)
RecipeTag â†’ Recipe (ManyToOne)
RecipeTag â†’ Tag (ManyToOne)
Favorite â†’ User (ManyToOne)
Favorite â†’ Recipe (ManyToOne)
Comment â†’ User (ManyToOne)
Comment â†’ Recipe (ManyToOne)
Blog â†’ User (ManyToOne)
BlogComment â†’ User (ManyToOne)
BlogComment â†’ Blog (ManyToOne)
Recipe â†’ Difficulty (ManyToOne)
Recipe â†’ Cuisine (ManyToOne)
Recipe â†’ MealType (ManyToOne)
Photo â†’ User (ManyToOne)

ASSOCIATIONS:
-------------
User â†” Photo (OneToMany)
User â†” Recipe (OneToMany)
User â†” Blog (OneToMany)
User â†” Favorite (OneToMany)
User â†” Comment (OneToMany)
User â†” BlogComment (OneToMany)
User â†” Profile (OneToOne)
Recipe â†” RecipeIngredient (OneToMany)
Recipe â†” Step (OneToMany)
Recipe â†” Comment (OneToMany)
Recipe â†” Favorite (OneToMany)
Blog â†” BlogComment (OneToMany)
Recipe â†” Tag (ManyToMany via RecipeTag)
Blog â†” Tag (ManyToMany)
Photo â†” User (ManyToMany via favorites)

ðŸ“Š CARDINALITÃ‰S
===============

1..1 (OneToOne):
- User â†” Profile
- Recipe â†” Difficulty
- Recipe â†” MealType
- RecipeIngredient â†” Ingredient
- RecipeIngredient â†” Unit
- Step â†” Recipe
- RecipeTag â†” Recipe
- RecipeTag â†” Tag
- Favorite â†” User
- Favorite â†” Recipe
- Comment â†” User
- Comment â†” Recipe
- BlogComment â†” User
- BlogComment â†” Blog

1..* (OneToMany):
- User â†’ Photo
- User â†’ Recipe
- User â†’ Blog
- User â†’ Favorite
- User â†’ Comment
- User â†’ BlogComment
- Recipe â†’ RecipeIngredient
- Recipe â†’ Step
- Recipe â†’ Comment
- Recipe â†’ Favorite
- Blog â†’ BlogComment
- Difficulty â†’ Recipe
- Cuisine â†’ Recipe
- MealType â†’ Recipe
- Ingredient â†’ RecipeIngredient
- Unit â†’ RecipeIngredient

*..* (ManyToMany):
- User â†” Photo (via favorites)
- Recipe â†” Tag (via RecipeTag)
- Blog â†” Tag

ðŸŽ¨ VISUAL DIAGRAM STRUCTURE
===========================

PACKAGES (Groupes logiques):
1. "Authentification & Profil"
   - User
   - Profile

2. "Gestion des Recettes"
   - Recipe
   - RecipeIngredient
   - Step
   - Difficulty
   - Cuisine
   - MealType
   - Ingredient
   - Unit

3. "SystÃ¨me de Tags"
   - Tag
   - RecipeTag

4. "FonctionnalitÃ©s Sociales"
   - Favorite
   - Comment

5. "SystÃ¨me de Blog"
   - Blog
   - BlogComment

6. "Gestion des MÃ©dias"
   - Photo

ðŸ”§ PLANTUML TEMPLATE
===================

@startuml
!theme plain
skinparam classAttributeIconSize 0
skinparam classFontSize 12
skinparam classFontName Arial
skinparam packageStyle rectangle

package "Authentification & Profil" {
  class User {
    + username: String
    + email: String
    + first_name: String
    + last_name: String
    + password: String
    + is_active: Boolean
    + is_staff: Boolean
    + date_joined: DateTime
    + last_login: DateTime
    + __str__(): String
  }
  
  class Profile {
    + user: OneToOneField(User)
    + avatar: ImageField
    + __str__(): String
  }
}

package "Gestion des Recettes" {
  class Recipe {
    + title: String(200)
    + description: Text
    + difficulty: ForeignKey(Difficulty)
    + cuisine: ForeignKey(Cuisine)
    + meal_type: ForeignKey(MealType)
    + prep_time: Integer
    + cook_time: Integer
    + servings: Integer
    + user: ForeignKey(User)
    + created_at: DateTime
    + updated_at: DateTime
    + image: ImageField
    + is_public: Boolean
    + tags: ManyToManyField(Tag)
    + __str__(): String
  }
  
  class RecipeIngredient {
    + recipe: ForeignKey(Recipe)
    + ingredient: ForeignKey(Ingredient)
    + quantity: Decimal(10,2)
    + unit: ForeignKey(Unit)
    + __str__(): String
  }
  
  class Step {
    + recipe: ForeignKey(Recipe)
    + step_number: Integer
    + instruction: Text
    + __str__(): String
  }
  
  class Difficulty {
    + name: String(50)
    + __str__(): String
  }
  
  class Cuisine {
    + name: String(50)
    + country_code: String(5)
    + save(): void
    + __str__(): String
  }
  
  class MealType {
    + name: String(50)
    + __str__(): String
  }
  
  class Ingredient {
    + name: String(100)
    + __str__(): String
  }
  
  class Unit {
    + name: String(50)
    + __str__(): String
  }
}

package "SystÃ¨me de Tags" {
  class Tag {
    + name: String(50)
    + __str__(): String
  }
  
  class RecipeTag {
    + recipe: ForeignKey(Recipe)
    + tag: ForeignKey(Tag)
  }
}

package "FonctionnalitÃ©s Sociales" {
  class Favorite {
    + user: ForeignKey(User)
    + recipe: ForeignKey(Recipe)
    + created_at: DateTime
  }
  
  class Comment {
    + user: ForeignKey(User)
    + recipe: ForeignKey(Recipe)
    + comment: Text
    + created_at: DateTime
  }
}

package "SystÃ¨me de Blog" {
  class Blog {
    + title: String(200)
    + content: Text
    + author: ForeignKey(User)
    + image: ImageField
    + tags: ManyToManyField(Tag)
    + created_at: DateTime
    + updated_at: DateTime
    + __str__(): String
  }
  
  class BlogComment {
    + user: ForeignKey(User)
    + blog: ForeignKey(Blog)
    + comment: Text
    + created_at: DateTime
    + __str__(): String
  }
}

package "Gestion des MÃ©dias" {
  class Photo {
    + user: ForeignKey(User)
    + Nom: String(200)
    + Descreption: Text
    + upload_date: DateTime
    + image: ImageField
    + favorites: ManyToManyField(User)
    + __str__(): String
  }
}

' Relations
User ||--|| Profile
User ||--o{ Recipe
User ||--o{ Blog
User ||--o{ Favorite
User ||--o{ Comment
User ||--o{ BlogComment
User ||--o{ Photo
Recipe ||--o{ RecipeIngredient
Recipe ||--o{ Step
Recipe ||--o{ Comment
Recipe ||--o{ Favorite
Blog ||--o{ BlogComment
Recipe }o--|| Difficulty
Recipe }o--|| Cuisine
Recipe }o--|| MealType
RecipeIngredient }o--|| Ingredient
RecipeIngredient }o--|| Unit
RecipeTag }o--|| Recipe
RecipeTag }o--|| Tag
Blog }o--|| User
Blog }o--o{ Tag
Photo }o--o{ User

@enduml

ðŸ’¡ QUICK DIAGRAM CREATION STEPS
===============================

1. COPY the PlantUML template above
2. PASTE into https://www.plantuml.com/plantuml/uml/
3. CUSTOMIZE by adding/removing classes
4. DOWNLOAD as PNG/SVG/PDF
5. IMPORT into Lucidchart/Draw.io if needed

ðŸš€ READY TO USE!
===============

This class diagram shows the complete data model of your Recipe Share application with all relationships, attributes, and methods clearly defined! 

TITRE: Inscription d'un nouvel utilisateur
ACTEURS: Utilisateur InvitÃ©, SystÃ¨me, Base de DonnÃ©es

SÃ‰QUENCE:
1. Utilisateur InvitÃ© â†’ Page d'inscription
2. Utilisateur InvitÃ© â†’ Saisit nom d'utilisateur, email, mot de passe
3. Utilisateur InvitÃ© â†’ Clic sur "S'inscrire"
4. Page d'inscription â†’ Validation des donnÃ©es
5. Page d'inscription â†’ VÃ©rification unicitÃ© username/email
6. Page d'inscription â†’ Base de DonnÃ©es (crÃ©er utilisateur)
7. Base de DonnÃ©es â†’ Confirmation crÃ©ation
8. Page d'inscription â†’ CrÃ©ation profil automatique
9. Page d'inscription â†’ Connexion automatique
10. Page d'inscription â†’ Redirection vers page principale
11. SystÃ¨me â†’ Affichage message de succÃ¨s